5.15.18 - Alex:
Tasks Completed:
    -Deleted custom template functions from work yesterday
    -Implemented django-money for use with pay.html
    -Created custom currencies within django-money/moneyed to support TLC, LCUK, LCAR, LCSG
    
I'm unsure wether or not git is tracking the lib/python3.5/site_packages or not, but if it isn't the code to add the custom currencies I'll list below:

In lib/python3.5/site_packages/moneyed/classes.py, add:

    # Custom currencies
    TLC = add_currency('TLC', '001', 'United States Lending Coin', ['LCUS'])
    LCUK = add_currency('LCUK', '002', 'United Kingdom Lending Coin', ['LCUK'])
    LCAR = add_currency('LCAR', '003', 'Argentina Lending Coin', ['LCAR'])
    LCSG = add_currency('LCSG', '004', 'Singapore Lending Coin', ['LCSG'])

In lib/python3.5/site_packages/moneyed/localization.py, add:
   
    # Custom currency signs - en_US
    # Will possibly want to remove either the prefix or suffix for cleanliness
    _sign('en_US', moneyed.TLC, prefix='$', suffix=' LCUS')
    _sign('en_US', moneyed.LCUK, prefix='Â£', suffix=' LCUK')
    _sign('en_US', moneyed.LCAR, prefix='ARS$', suffix=' LCAR')
    _sign('en_US', moneyed.LCSG, prefix='SI$', suffix=' LCSG')

5.14.18 - Alex:
    Looking into the I18N, it seemed more useful for translating strings, and for dates. Also the built-in I10N handles a lot of form formatting, but it doens't add the currency symbols. I couldn't figure out how to implement those to show the currency symbol as well as format the number to move the decimal place. So, the best answer that I could find to implement python's localize.currency() method was to create your own template tag/template filter. A custom filter would allow django to utilize the localize.currency() method within the templates. The resources I was using were:

        -https://www.codementor.io/hiteshgarg14/creating-custom-template-tags-in-django-application-58wvmqm5f
        -https://docs.djangoproject.com/en/1.11/howto/custom-template-tags/#writing-custom-template-filters
        -https://stackoverflow.com/questions/320929/currency-formatting-in-python/42753618
        -https://docs.python.org/3.5/library/locale.html

    The problem that I'm running into is that, when I run the pay.html, it displays the error : SyntaxError at /pay.html unexpected EOF while parsing(custom_tags.py, line 11)

    I can't tell if it's the 'blockdata.loanbal' that's giving 'add_currency_symbol' a unusable data type, if the 'value' passed into locale.currency() doesn't mesh, or if it's the data type of the return statement. 

5.11.18 - Alex:
Tasks Completed:
    Created a working multi-step form for loan_apply
        * this used django formWizard from the 'form tools' app, documentation here: http://django-formtools.readthedocs.io/en/stable/index.html
        ** I had to change the wwwtlc/urls to enable the 'pagination' of the formWizard multi-step form, original url is left commented out in case of issues
    Changed Loan_Data to allow nulls that weren't going to be input by the user

Tasks not complete:
    Dictionary creation on wwwtlc/models/verified - for dates
    

5.10.18 - Alex:
Tasks Completed:
    Determined order of forms that will need to be entered by user (Address -> Person -> LoanData)
    Created forms for all necessary models
    Small change on Loan_Data to display contact_person's name as well as the address of property that needs finaced instead of displaying the Loan_Data id number

Problems encountered:
    Was unsure of how to approach passing data from one form to the next, tried using a view_controller variable to move through different views containing each of the different formModels, but that didn't work. 
    I tried looking into creating a session to store data variables, but not submit them to the database until the last view function was called, but the problem I ran into with that was that HttpResponseRedirect wouldn't reload the 'request' information to pass into the next view function.
    I read that FormWizard would be able to simplify this problem, but didn't have much time to look into how to use it.

5.9.18 - Alex
Tasks Completed:
    Added OneToMany(ForeignKey) field to Loan_Data/TLC_balance, as well as reverse lookup
    Added help_text and verbose_name attributes throughout models to improve user-readability
    Modified Loan/forms.py to reflect changes in models, and to add things user should enter
    Recreated the DB so that it allowed nullable fields in modified models

Problems Encountered:
    Same problems as 5.8.18, but fixed with the help of Ian

5.8.18 - Alex
Tasks Completed: 
    Created 'alias' for the admin view of Addresses - changed __str__(self) to output self.street1 to display that instead of 'Address object'
    Added choices list for Borrower model in Loan_Data to include different types of entities
    Added hint/help text for Person.phone
    Added nullable fields to Address.street2/street3, Person/name_middle

Problems encountered:
    Could not add any nullable fields within the Verified model
    Could not enter data into Person, or any model referencing Credit_Report, Bank, or Bank_Account; Also couldn't allow null=True on these fields in order to test functionality due to them being ForeignKeys

5.4.18 - Alex

Form was modified to accomodate styling. Models were also created to allow for database usage in Loans app. Files that I changed today:
    -home.html
    -loan_apply.html
    -forms.py
    -views.py
    -wwwtlc/urls.py - minor fix to work with loan_apply.html
    -models.py
    -admin.py - created an admin interface to input data into Loan app

5.3.18 - Alex

Form was modified so that input fields show up on loan_apply.html. Other files were changed as well to accomodate this, such as:

    -urls.py - the previous url pointed at a different view then the one I was
                 working on, I left the original url commented out in case we
                 need to change back to it
    -forms.py
    -loan/views.py
    -loan_apply.html

5.2.18 - Alex

Form was written with django 2.0 doc, needs to be converted into 1.11v style forms
Files that will need to be modified to accomodate this (within the app 'loan'):
	views.py
	forms.py
	loan_apply.html
	(possibly)
	home.html
	login.html
	urls.py

Additional files that were changed:
    header.html - commented out most of navigation for readability (nav was overlapping content I was working on)

I sent the django 1.11 documentation over discord
